<style lang="css">
 .dis{
  display: inline-block;
 }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import LoginModel from './models/loginModel'
import Fetch from './library/fetch'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/myorder',
      'pages/orderdetails'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    'tabBar': {
      'list': [
        {
          pagePath: 'pages/myorder',
          text: '我的订单'
        },
        {
          pagePath: 'pages/orderdetails',
          text: '订单详情'
        }
      ],
      borderStyle: 'white',
      color: '#aaa',
      selectedColor: '#61BFFB',
      backgroundColor: '#FFF'
    }
  }
  globalData = {
    openid: null,
    userData: {},
    orderType: 'all'
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  async onLaunch() {
    let data = {}
    if (Fetch.getCookie()) {
      data = Fetch.getCookie()
      // console.log(data)
    } else {
      Fetch.setCookie(data)
    }
    if (JSON.stringify(data) !== '{}') {
      this.globalData.userData = data
    } else {
      let openid = await this.wxLogin()
      this.globalData.openid = openid
      let isAuth = await this.wxGetSetting()
      if (isAuth) {
        this.globalData.userData = await this.getUserInfo()
        this.globalData.userData.openid = openid
        let clientData = await LoginModel.fetchLogin(this.globalData.userData)
        Fetch.setCookie(clientData)
      }
    }
  }

  wxGetSetting() {
    return new Promise((resolve, reject) => {
      wx.getSetting({
        complete: async (res) => {
          // console.log(res)
          if (res.authSetting['scope.userInfo']) {
            resolve(true)
            // 已经授权，可以直接调用 getUserInfo 获取头像昵称
          } else {
            resolve(false)
          }
        }
      })
    })
  }

  wxLogin() {
    return new Promise((resolve, reject) => {
      wx.checkSession({
        success(res) {
          console.log('success')
        },
        fail(res) {
          wx.login({
            success(res) {
              var parm = {
                'appId': 'wxb847d92fa467e75c',
                'code': res.code
              }
              wx.request({
                url: 'http://www.简家之域.com/api/login',
                data: JSON.stringify(parm),
                header: {
                  'Content-Type': 'application/json'
                },
                method: 'POST',
                success: function(res) {
                  var openid = res.openid
                  wx.request({
                    url: 'http://www.简家之域.com/api/register/' + openid,
                    data: JSON.stringify(openid),
                    header: {
                      'Content-Type': 'application/json'
                    },
                    method: 'POST',
                    success: function(res) {
                      console.log('success')
                    },
                    fail: function(res) {
                      console.log('fail')
                    }
                  })
                },
                fail: function(res) {
                  console.log('fail')
                }
              })
            },
            fail(res) {
              console.log('fail')
            }
          })
        }
      })
    })
  }

  getUserInfo() {
    let self = this
    return new Promise((resolve, reject) => {
      wx.getUserInfo({
        success (res) {
          // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
          // 所以此处加入 callback 以防止这种情况
          if (self.userInfoReadyCallback) {
            self.userInfoReadyCallback(res)
          }
          resolve(res.userInfo)
        },
        fail (res) {
          console.log(res)
          resolve({})
        }
      })
    })
  }
}
</script>
